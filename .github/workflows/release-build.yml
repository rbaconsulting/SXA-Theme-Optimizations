name: Release Build
on:
  push:
    tags:
    - '[0-9]+.[0-9]+.[0-9]+.[0-9]+'
    - '[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+'
jobs:
  build:
    env:
      Output_Folder: './output'

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5

    - name: Set env release variable
      run: |
       chcp 65001 #set code page to utf-8
       echo ("Release_Version=" + $env:GITHUB_REF.replace('refs/tags/', '')) >> $env:GITHUB_ENV

    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.x

    - name: Build
      run: dotnet build SXA.Theme.Optimizations/SXA.Theme.Optimizations.csproj -c Release

    - name: Pack Nuget Package
      run: dotnet pack SXA.Theme.Optimizations/SXA.Theme.Optimizations.csproj -c Release -o ${{ env.Output_Folder }} /p:Version=${{ env.Release_Version }}

    - name: Upload NuGet Package to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ${{ env.Output_Folder }}/SXA.Theme.Optimizations.${{ env.Release_Version }}.nupkg
        asset_name: SXA.Theme.Optimizations.${{ env.Release_Version }}.nupkg
        asset_content_type: application/zip

    - name: Publish to nuget.org
      run: dotnet nuget push ${{ env.Output_Folder }}/SXA.Theme.Optimizations.${{ env.Release_Version }}.nupkg --api-key ${{ secrets.NUGET_API_KEY }} -s 'https://api.nuget.org/v3/index.json'